# Removes in order:
# link to Chrome store on the extensions page when empty
# link to Chrome store in extensions page sidebar
# 'Tabs from other devices' entry on the History page sidebar
# the 'Learn more' link on new incognito tabs
# Live captions entry from the settings page
# link to Google's accessibility site from the settings page
# link to Google's help site on the About page
# external link for theme entry on settings page
# webstore text for theme entry on settings page
# the Google account line from the Payment methods page
# Safety check section on the settings page
# Privacy guide promo on the privacy page
# Google sign-in and Anonymized Data Collection sections
# help bubble for the removed data collection section
# Privacy guide section on the privacy page
# Advanced Protection Program link on the security settings page
# the 'Learn more' link from the search engine entry on the settings page
# Safety Check entry on the side menu on the settings page
# the (?) learn more button on many settings pages
# the 'Vist Chrome Web Store' entry in the extensions section of the main menu
# the side panel entry in All Bookmarks
# the feedback entry in the third party cookie popup
# unneeded elements from the profile menu
# the 'Learn more' link on crashed tabs
# disable LiveCaption flag by default, this also removes non-functional Live Caption checkbox from media controls
# the new feature badges

--- a/chrome/browser/resources/extensions/item_list.html
+++ b/chrome/browser/resources/extensions/item_list.html
@@ -106,13 +106,6 @@
         <h2 class="extension-title-container">$i18n{safetyCheckAllExtensions}</h2>
       </template>
     </div>
-    <div id="no-items" class="empty-list-message"
-        hidden$="[[!shouldShowEmptyItemsMessage_(
-            apps.length, extensions.length)]]">
-      <span on-click="onNoExtensionsClick_">
-        $i18nRaw{noExtensionsOrApps}
-      </span>
-    </div>
     <div id="no-search-results" class="empty-list-message"
         hidden$="[[!shouldShowEmptySearchMessage_(
             shownAppsCount_, shownExtensionsCount_, apps, extensions)]]">
--- a/chrome/browser/resources/extensions/sidebar.html
+++ b/chrome/browser/resources/extensions/sidebar.html
@@ -71,14 +71,3 @@
     <cr-ripple></cr-ripple>
   </a>
 </iron-selector>
-<div>
-  <div class="separator"></div>
-  <div class="cr-nav-menu-item" id="moreExtensions">
-    <iron-icon id="web-store-icon" icon="extensions-icons:web_store">
-    </iron-icon>
-    <span id="discover-more-text" class="cr-secondary-text"
-        on-click="onMoreExtensionsClick_"
-        inner-h-t-m-l="[[discoverMoreText_]]"></span>
-    <cr-ripple></cr-ripple>
-  </div>
-</div>
--- a/chrome/browser/resources/extensions/sidebar.ts
+++ b/chrome/browser/resources/extensions/sidebar.ts
@@ -50,21 +50,11 @@ export class ExtensionsSidebarElement ex
        * displayed.
        */
       selectedPath_: String,
-
-      /**
-       * The text displayed in the sidebar containing the link to open the
-       * Chrome Web Store to get more extensions.
-       */
-      discoverMoreText_: {
-        type: String,
-        computed: 'computeDiscoverMoreText_()',
-      },
     };
   }
 
   enableEnhancedSiteControls: boolean;
   private selectedPath_: Page;
-  private discoverMoreText_: TrustedHTML;
 
   /**
    * The ID of the listener on |navigation|. Stored so that the
@@ -120,13 +110,6 @@ export class ExtensionsSidebarElement ex
     }
   }
 
-  private computeDiscoverMoreText_(): TrustedHTML {
-    return this.i18nAdvanced('sidebarDiscoverMore', {
-      tags: ['a'],
-      attrs: ['target', 'on-click'],
-      substitutions: [loadTimeData.getString('getMoreExtensionsUrl')],
-    });
-  }
 }
 
 declare global {
--- a/chrome/browser/resources/history/side_bar.html
+++ b/chrome/browser/resources/history/side_bar.html
@@ -87,13 +87,6 @@
         $i18n{historyMenuItem}
         <cr-ripple></cr-ripple>
       </a>
-      <a id="syncedTabs" role="menuitem" href="/syncedTabs"
-          class="page-item cr-nav-menu-item"
-          path="syncedTabs" on-click="onItemClick_">
-        <iron-icon icon="cr:phonelink"></iron-icon>
-        $i18n{openTabsMenuItem}
-        <cr-ripple></cr-ripple>
-      </a>
       <!-- tabindex is needed below because <a> without href attribute is not
             focusable in sequential keyboard navigation by default. -->
       <a role="menuitem" id="clear-browsing-data"
--- a/chrome/browser/resources/new_tab_page_incognito_guest/incognito_tab.html
+++ b/chrome/browser/resources/new_tab_page_incognito_guest/incognito_tab.html
@@ -24,9 +24,6 @@ document.querySelector('#incognitothemec
   <h1>$i18n{incognitoTabHeading}</h1>
   <p id="subtitle">
     <span>$i18n{incognitoTabDescription}</span>
-    <a class="learn-more-button"
-        href="$i18n{learnMoreLink}"
-        aria-label="$i18nPolymer{learnMoreA11yLabel}">$i18n{learnMore}</a>
   </p>
   <div id="bulletpoints-wrapper">
     <div class="bulletpoints first">$i18nRaw{incognitoTabFeatures}</div>
--- a/chrome/browser/resources/settings/a11y_page/a11y_page.html
+++ b/chrome/browser/resources/settings/a11y_page/a11y_page.html
@@ -26,7 +26,7 @@
               external$="[[captionSettingsOpensExternally_]]">
           </cr-link-row>
         </template>
-        <template is="dom-if" if="[[!captionSettingsOpensExternally_]]">
+        <template is="dom-if" if="[[false]]">
           <cr-link-row id="captions"
               class="hr"
               label="$i18n{captionsTitle}"
@@ -84,11 +84,6 @@
             external>
         </cr-link-row>
 </if>
-        <cr-link-row class="hr" label="$i18n{moreFeaturesLink}"
-            on-click="onMoreFeaturesLinkClick_" sub-label="$i18n{a11yWebStore}"
-            button-aria-description="$i18n{opensInNewTab}"
-            external>
-        </cr-link-row>
       </div>
 <if expr="not is_chromeos">
       <template is="dom-if" if="[[!captionSettingsOpensExternally_]]">
--- a/chrome/browser/resources/settings/about_page/about_page.html
+++ b/chrome/browser/resources/settings/about_page/about_page.html
@@ -120,11 +120,6 @@
         </div>
       </template>
 </if>
-      <template is="dom-if" if="[[!showGetTheMostOutOfChromeSection_]]">
-        <cr-link-row class="hr" id="help" on-click="onHelpClick_"
-            label="$i18n{aboutGetHelpUsingChrome}"
-            external></cr-link-row>
-      </template>
 <if expr="_google_chrome">
       <template is="dom-if" if="[[!showGetTheMostOutOfChromeSection_]]">
         <cr-link-row class="hr" id="reportIssue" on-click="onReportIssueClick_"
--- a/chrome/browser/resources/settings/appearance_page/appearance_page.html
+++ b/chrome/browser/resources/settings/appearance_page/appearance_page.html
@@ -30,11 +30,11 @@
     <settings-animated-pages id="pages" section="appearance"
         focus-config="[[focusConfig_]]">
       <div route-path="default">
-        <div class="settings-row first" id="themeRow"
+        <div class="cr-row first" id="themeRow"
             hidden="[[!pageVisibility.setTheme]]">
-          <cr-link-row class="first" hidden="[[!pageVisibility.setTheme]]"
-              label="$i18n{themes}" sub-label="[[themeSublabel_]]"
-              on-click="openThemeUrl_" external></cr-link-row>
+          <div class="flex cr-padded-text">
+            <div>$i18n{themes}</div><div class="secondary">[[themeSublabel_]]</div>
+          </div>
 <if expr="not is_linux">
           <template is="dom-if" if="[[prefs.extensions.theme.id.value]]">
             <div class="separator"></div>
--- a/chrome/browser/resources/settings/appearance_page/appearance_page.ts
+++ b/chrome/browser/resources/settings/appearance_page/appearance_page.ts
@@ -412,8 +412,8 @@ export class SettingsAppearancePageEleme
       return;
     }
 
-    let i18nId;
     // <if expr="is_linux">
+    let i18nId;
     switch (this.systemTheme_) {
       case SystemTheme.GTK:
         i18nId = 'gtkTheme';
@@ -425,11 +425,8 @@ export class SettingsAppearancePageEleme
         i18nId = 'classicTheme';
         break;
     }
-    // </if>
-    // <if expr="not is_linux">
-    i18nId = 'chooseFromWebStore';
-    // </if>
     this.themeSublabel_ = this.i18n(i18nId);
+    // </if>
   }
 
   /** @return Whether applied theme is set by policy. */
--- a/chrome/browser/resources/settings/autofill_page/payments_section.html
+++ b/chrome/browser/resources/settings/autofill_page/payments_section.html
@@ -95,11 +95,6 @@
   </div>
 </template>
 
-<div id="manageLink" class="cr-row first">
-  <!-- This span lays out the link correctly, relative to the text. -->
-  <div class="cr-padded-text">$i18nRaw{manageCreditCardsLabel}</div>
-</div>
-
 <div class="cr-row continuation">
   <h2 class="flex">$i18n{creditCards}</h2>
   <template is="dom-if"
--- a/chrome/browser/resources/settings/basic_page/basic_page.html
+++ b/chrome/browser/resources/settings/basic_page/basic_page.html
@@ -47,7 +47,7 @@
         </settings-section>
         <!-- TODO(crbug/1469277): Remove after SafetyHub launched. -->
         <template is="dom-if"
-              if="[[showSafetyCheckPage_(pageVisibility.safetyCheck)]]" restamp>
+              if="[[false]]" restamp>
           <settings-section page-title="$i18n{safetyCheckSectionTitle}"
               section="safetyCheck" nest-under-section="privacy"
               id="safetyCheckSettingsSection">
--- a/chrome/browser/resources/settings/basic_page/basic_page.ts
+++ b/chrome/browser/resources/settings/basic_page/basic_page.ts
@@ -12,7 +12,6 @@ import 'chrome://resources/cr_elements/c
 import 'chrome://resources/polymer/v3_0/iron-flex-layout/iron-flex-layout-classes.js';
 import '../ai_page/ai_page.js';
 import '../appearance_page/appearance_page.js';
-import '../privacy_page/privacy_guide/privacy_guide_promo.js';
 import '../privacy_page/privacy_page.js';
 import '../safety_check_page/safety_check_page.js';
 import '../safety_hub/safety_hub_entry_point.js';
--- a/chrome/browser/resources/settings/privacy_page/personalization_options.html
+++ b/chrome/browser/resources/settings/privacy_page/personalization_options.html
@@ -21,7 +21,7 @@
 
     </style>
 
-<if expr="not is_chromeos">
+<if expr="False">
     <cr-radio-group id="chromeSigninUserChoiceRadioGroup"
         class="hr radio-group-content"
         hidden="[[!chromeSigninUserChoiceInfo_.shouldShowSettings]]"
@@ -90,12 +90,6 @@
     </settings-toggle-button>
 </if><!-- not chromeos -->
 </if><!-- _google_chrome -->
-    <settings-toggle-button id="urlCollectionToggle"
-        class="hr"
-        pref="{{prefs.url_keyed_anonymized_data_collection.enabled}}"
-        label="$i18n{urlKeyedAnonymizedDataCollection}"
-        sub-label="$i18n{urlKeyedAnonymizedDataCollectionDesc}">
-    </settings-toggle-button>
     <template is="dom-if" if="[[enablePageContentSetting_]]">
       <cr-link-row id="pageContentRow"
           class="hr"
--- a/chrome/browser/resources/settings/privacy_page/personalization_options.ts
+++ b/chrome/browser/resources/settings/privacy_page/personalization_options.ts
@@ -214,10 +214,6 @@ export class SettingsPersonalizationOpti
         'chrome-signin-user-choice-info-change',
         this.setChromeSigninUserChoiceInfo_.bind(this));
     // </if>
-
-    this.registerHelpBubble(
-        ANONYMIZED_URL_COLLECTION_ID,
-        this.$.urlCollectionToggle.getBubbleAnchor(), {anchorPaddingTop: 10});
   }
 
   // <if expr="chromeos_ash">
--- a/chrome/browser/resources/settings/privacy_page/privacy_page.html
+++ b/chrome/browser/resources/settings/privacy_page/privacy_page.html
@@ -41,15 +41,6 @@
             label="$i18n{clearBrowsingData}"
             sub-label="$i18n{clearBrowsingDataDescription}"
             on-click="onClearBrowsingDataClick_"></cr-link-row>
-        <template is="dom-if" if="[[isPrivacyGuideAvailable]]">
-          <cr-link-row id="privacyGuideLinkRow" class="hr"
-              start-icon="settings20:wind-rose"
-              label="$i18n{privacyGuideLabel}"
-              sub-label="$i18n{privacyGuideSublabel}"
-              on-click="onPrivacyGuideClick_"
-              role-description="$i18n{subpageArrowRoleDescription}">
-          </cr-link-row>
-        </template>
         <template is="dom-if" if="[[is3pcdRedesignEnabled_]]">
           <cr-link-row id="trackingProtectionLinkRow"
               start-icon="settings:visibility-off"
--- a/chrome/browser/resources/settings/privacy_page/security_page.html
+++ b/chrome/browser/resources/settings/privacy_page/security_page.html
@@ -214,9 +214,3 @@
       </cr-link-row>
 </if>
 
-    <cr-link-row id="advanced-protection-program-link" class="hr"
-        label="$i18n{advancedProtectionProgramTitle}"
-        sub-label="$i18n{advancedProtectionProgramDesc}"
-        on-click="onAdvancedProtectionProgramLinkClick_"
-        external>
-    </cr-link-row>
--- a/chrome/browser/resources/settings/search_page/search_page.html
+++ b/chrome/browser/resources/settings/search_page/search_page.html
@@ -44,11 +44,6 @@
           $i18n{searchPageTitle}
           <div class="secondary">
             $i18n{searchEngineChoiceEntryPointSubtitle}
-            <a href="$i18n{searchExplanationLearnMoreURL}"
-                aria-label="$i18n{searchExplanationLearnMoreA11yLabel}"
-                target="_blank">
-              $i18n{learnMore}
-            </a>
           </div>
           <template is="dom-if" if="[[isDefaultSearchControlledByPolicy_(
               prefs.default_search_provider_data.template_url_data)]]">
--- a/chrome/browser/resources/settings/settings_page/settings_subpage.html
+++ b/chrome/browser/resources/settings/settings_page/settings_subpage.html
@@ -91,7 +91,7 @@
       </template>
       <h1 class="cr-title-text">[[pageTitle]]</h1>
       <slot name="subpage-title-extra"></slot>
-      <template is="dom-if" if="[[learnMoreUrl]]">
+      <template is="dom-if" if="[[false]]">
         <cr-icon-button iron-icon="cr:help-outline" dir="ltr"
             aria-label="[[getLearnMoreAriaLabel_(pageTitle)]]"
             aria-description="$i18n{opensInNewTab}" on-click="onHelpClick_">
--- a/chrome/browser/ui/toolbar/app_menu_model.cc
+++ b/chrome/browser/ui/toolbar/app_menu_model.cc
@@ -857,19 +857,9 @@ void ExtensionsMenuModel::Build(Browser*
   SetElementIdentifierAt(
       GetIndexOfCommandId(IDC_EXTENSIONS_SUBMENU_MANAGE_EXTENSIONS).value(),
       kManageExtensionsMenuItem);
-  AddItemWithStringId(IDC_EXTENSIONS_SUBMENU_VISIT_CHROME_WEB_STORE,
-                      IDS_EXTENSIONS_SUBMENU_CHROME_WEBSTORE_ITEM);
-  SetElementIdentifierAt(
-      GetIndexOfCommandId(IDC_EXTENSIONS_SUBMENU_VISIT_CHROME_WEB_STORE)
-          .value(),
-      kVisitChromeWebStoreMenuItem);
   if (features::IsChromeRefresh2023()) {
     SetCommandIcon(this, IDC_EXTENSIONS_SUBMENU_MANAGE_EXTENSIONS,
                    vector_icons::kExtensionChromeRefreshIcon);
-#if BUILDFLAG(GOOGLE_CHROME_BRANDING)
-    SetCommandIcon(this, IDC_EXTENSIONS_SUBMENU_VISIT_CHROME_WEB_STORE,
-                   vector_icons::kGoogleChromeWebstoreIcon);
-#endif
   }
 }
 
--- a/chrome/browser/ui/views/bookmarks/bookmark_menu_delegate.cc
+++ b/chrome/browser/ui/views/bookmarks/bookmark_menu_delegate.cc
@@ -639,13 +639,6 @@ void BookmarkMenuDelegate::BuildMenu(con
                   kBookmarksSidePanelIcon, ui::kColorMenuIcon,
                   ui::SimpleMenuModel::kDefaultIconSize)
             : ui::ImageModel();
-    menu->AppendMenuItem(
-        IDC_SHOW_BOOKMARK_SIDE_PANEL,
-        l10n_util::GetStringUTF16(IDS_BOOKMARKS_ALL_BOOKMARKS_OPEN_SIDE_PANEL),
-        bookmarks_side_panel_icon);
-    if (!parent->children().empty()) {
-      menu->AppendSeparator();
-    }
   }
   const ui::ImageModel folder_icon = chrome::GetBookmarkFolderIcon(
       chrome::BookmarkFolderIconType::kNormal, ui::kColorMenuIcon);
--- a/chrome/browser/ui/views/location_bar/cookie_controls/cookie_controls_content_view.cc
+++ b/chrome/browser/ui/views/location_bar/cookie_controls/cookie_controls_content_view.cc
@@ -147,12 +147,7 @@ void CookieControlsContentView::SetEnfor
 }
 
 void CookieControlsContentView::SetFeedbackSectionVisibility(bool visible) {
-  if (visible && base::FeatureList::IsEnabled(
-                     content_settings::features::kUserBypassFeedback)) {
-    feedback_section_->SetVisible(true);
-  } else {
     feedback_section_->SetVisible(false);
-  }
   PreferredSizeChanged();
 }
 
--- a/chrome/browser/ui/views/profiles/profile_menu_view.cc
+++ b/chrome/browser/ui/views/profiles/profile_menu_view.cc
@@ -187,6 +187,7 @@ void ProfileMenuView::BuildMenu() {
 }
 
 gfx::ImageSkia ProfileMenuView::GetSyncIcon() const {
+  return gfx::ImageSkia();
   Profile* profile = browser()->profile();
   if (profile->IsOffTheRecord() || profile->IsGuestSession())
     return gfx::ImageSkia();
@@ -578,15 +579,7 @@ void ProfileMenuView::BuildIdentity() {
         ui::ImageModel::FromImage(account_info.account_image),
         badge_image_model, menu_title_, menu_subtitle_, management_label);
   } else {
-    if (switches::IsExplicitBrowserSigninUIOnDesktopEnabled(
-            switches::ExplicitBrowserSigninPhase::kExperimental) &&
-        !switches::IsExplicitBrowserSigninUIOnDesktopEnabled(
-            switches::ExplicitBrowserSigninPhase::kFull) &&
-        account.IsEmpty()) {
-      account_info =
-          signin_ui_util::GetSingleAccountForPromos(identity_manager);
-    }
-    menu_title_ = l10n_util::GetStringUTF16(IDS_PROFILES_LOCAL_PROFILE_STATE);
+    menu_title_ = std::u16string();
     // The email may be empty.
     menu_subtitle_ = base::UTF8ToUTF16(account_info.email);
     std::u16string management_label;
--- a/chrome/browser/ui/views/sad_tab_view.cc
+++ b/chrome/browser/ui/views/sad_tab_view.cc
@@ -559,9 +559,6 @@ SadTabView::SadTabView(content::WebConte
   auto* actions_container =
       container->AddChildView(std::make_unique<views::FlexLayoutView>());
   actions_container->SetCrossAxisAlignment(views::LayoutAlignment::kCenter);
-
-  EnableHelpLink(actions_container);
-
   action_button_ =
       actions_container->AddChildView(std::make_unique<views::MdTextButton>(
           base::BindRepeating(&SadTabView::PerformAction,
@@ -654,22 +651,6 @@ void SadTabView::AttachToWebView() {
   }
 }
 
-void SadTabView::EnableHelpLink(views::FlexLayoutView* actions_container) {
-#if BUILDFLAG(IS_CHROMEOS)
-  // Do not show the help link in the kiosk session to prevent escape from a
-  // kiosk app.
-  if (chromeos::IsKioskSession()) {
-    return;
-  }
-#endif
-  auto* help_link =
-      actions_container->AddChildView(std::make_unique<views::Link>(
-          l10n_util::GetStringUTF16(GetHelpLinkTitle())));
-  help_link->SetCallback(base::BindRepeating(
-      &SadTab::PerformAction, base::Unretained(this), Action::HELP_LINK));
-  help_link->SetProperty(views::kTableVertAlignKey,
-                         views::LayoutAlignment::kCenter);
-}
 
 void SadTabView::OnBoundsChanged(const gfx::Rect& previous_bounds) {
   // Specify the maximum message and title width explicitly.
--- a/media/base/media_switches.cc
+++ b/media/base/media_switches.cc
@@ -938,7 +938,7 @@ BASE_FEATURE(kOnDeviceWebSpeech,
              base::FEATURE_DISABLED_BY_DEFAULT);
 
 // Enables the Live Caption feature on supported devices.
-BASE_FEATURE(kLiveCaption, "LiveCaption", base::FEATURE_ENABLED_BY_DEFAULT);
+BASE_FEATURE(kLiveCaption, "LiveCaption", base::FEATURE_DISABLED_BY_DEFAULT);
 
 // Controls whether a "Share this tab instead" button should be shown for
 // getDisplayMedia captures. Note: This flag does not control if the "Share this
--- a/ui/views/controls/menu/menu_item_view.cc
+++ b/ui/views/controls/menu/menu_item_view.cc
@@ -824,7 +824,7 @@ void MenuItemView::SetAlerted() {
 }
 
 bool MenuItemView::ShouldShowNewBadge() const {
-  return is_new_;
+  return false;
 }
 
 bool MenuItemView::IsTraversableByKeyboard() const {
